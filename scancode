#!/usr/bin/env bash

set -e

COMMAND_TO_RUN=scancode
#WORKSPACE_DIR="/path/to/workspace"
#CODEBASE_DIR="your_codebase_directory"
 
SCANCODE_BIN="$(realpath "${BASH_SOURCE[0]}")"
SCANCODE_ROOT_DIR="$(cd "$(dirname "${SCANCODE_BIN}")" && pwd)"

SCANCODE_CONFIGURED_PYTHON="$SCANCODE_ROOT_DIR/venv/bin/python"

CODEBASE_PATH="$WORKSPACE_DIR/$CODEBASE_DIR"

logInfoMessage "I'll scan Git repository for vulnerabilities"
sleep $SLEEP_DURATION
logInfoMessage "Executing command"
logInfoMessage "$SCANCODE_ROOT_DIR/$COMMAND_TO_RUN -clipeu --json-pp \"$WORKSPACE_DIR/scan-result.json\" \"$CODEBASE_PATH\""

# Clone Git repository if not already cloned
if [ ! -d "$CODEBASE_PATH" ]; then
    echo "* Cloning the Git repository..."
    git clone "$@" "$CODEBASE_PATH"
fi

# Execute ScanCode on the cloned repository and generate the report
if [ -f "$SCANCODE_CONFIGURED_PYTHON" ]; then
    "$SCANCODE_ROOT_DIR/venv/bin/$COMMAND_TO_RUN" -clipeu --json-pp "$WORKSPACE_DIR/scan-result.json" "$CODEBASE_PATH"
fi


if [ ! -d "$CODEBASE_PATH" ]; then
    echo "* Cloning the Git repository..."
    git clone "$@" "$CODEBASE_PATH"
fi

# Configure ScanCode if not already configured
if [ ! -f "$SCANCODE_CONFIGURED_PYTHON" ]; then
    set -e
    echo "* Configuring ScanCode for first use..."
    CFG_QUIET=-qq "$SCANCODE_ROOT_DIR/configure"
    set +e
fi

# Execute ScanCode on the cloned repository and generate the report
if [ -f "$SCANCODE_CONFIGURED_PYTHON" ]; then
    "$SCANCODE_ROOT_DIR/venv/bin/$COMMAND_TO_RUN" -clipeu --json-pp "$WORKSPACE_DIR/scan-result.json" "$CODEBASE_PATH"
fi

# Continue with the rest of your script logic...

logInfoMessage "I'll scan Git repository for vulnerabilities"
sleep $SLEEP_DURATION

# Other logic as per your requirements...

logInfoMessage "Script execution completed."
